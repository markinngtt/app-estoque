{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_models/usuario.ts","webpack:///./src/app/_services/usuario.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/home.module.ts","webpack:///./src/app/home/home.routing.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.routing.ts","webpack:///./src/app/material.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class Usuario {\r\n    nome: string;\r\n    senha: string;\r\n    indSuperUsuario: String;\r\n    dataCadastro: Date;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class UsuarioService {\r\n\r\n  public ip = 'http://localhost:8080/api/usuario';\r\n\r\n  private url = {\r\n      urlConsultaUsuario: this.ip + '/consulta-usuario'\r\n  };\r\n\r\n  constructor (private http: HttpClient) { }\r\n\r\n  getUsuario(nome, senha){\r\n      return this.http.get(this.url.urlConsultaUsuario+\"/\"+nome+\"/\"+senha);\r\n  }\r\n\r\n\r\n}\r\n\r\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, LOCALE_ID } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule, registerLocaleData } from '@angular/common';\n\nimport { AppComponent } from './app.component';\nimport { HomeModule } from './home/home.module'\nimport { LoginModule } from './login/login.module';\nimport { UsuarioService} from './_services/usuario.service'\nimport { AppRoutingModule } from './app.routing';\nimport { HttpClient, HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { MaterialModule } from './material.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule,\n    HomeModule,\n    LoginModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot([\r\n      { path: '', redirectTo: '/login', pathMatch: 'full' }\r\n    ], {useHash:true})\r\n  ]\r\n})\r\nexport class AppRoutingModule { }","module.exports = \"body {\\r\\n    margin: 0;\\r\\n    font-family: Roboto, sans-serif;\\r\\n  }\\r\\n  \\r\\n  mat-card {\\r\\n    max-width: 80%;\\r\\n    margin: 2em auto;\\r\\n    text-align: center;\\r\\n  }\\r\\n  \\r\\n  mat-toolbar-row {\\r\\n    justify-content: center;\\r\\n  }\\r\\n  \\r\\n  .done {\\r\\n    position: fixed;\\r\\n    bottom: 20px;\\r\\n    right: 20px;\\r\\n    color: white;\\r\\n  }\\r\\n  \\r\\n  .example-fill-remaining-space {\\r\\n    /* This fills the remaining space, by using flexbox. \\r\\n       Every toolbar row uses a flexbox row layout. */\\r\\n    flex: 1 1 auto;\\r\\n  }\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col s12 m7\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div>\\r\\n          <span>usuario: {{usuario}}</span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<mat-toolbar color=\\\"primary\\\" >\\r\\n  <mat-toolbar-row>\\r\\n    <span>Bem vindo: {{usuario}}</span>\\r\\n  </mat-toolbar-row>\\r\\n  <mat-toolbar-row>    \\r\\n    <div>\\r\\n      <button mat-icon-button [mat-menu-trigger-for]=\\\"menuCadastro\\\">\\r\\n        <!--mat-icon>more_vert</mat-icon!-->\\r\\n        <span>Cadastros</span>      \\r\\n      </button>\\r\\n    \\r\\n      <button mat-icon-button [mat-menu-trigger-for]=\\\"menuMovimento\\\">\\r\\n          <!--mat-icon>more_vert</mat-icon!-->\\r\\n        <span>Movimento</span>\\r\\n      </button>\\r\\n  </div>\\r\\n    \\r\\n\\r\\n  </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n<mat-menu x-position=\\\"before\\\" #menuCadastro=\\\"matMenu\\\">\\r\\n  <button mat-menu-item>Usuario</button>\\r\\n  <button mat-menu-item>Produto</button>\\r\\n</mat-menu>\\r\\n\\r\\n<mat-menu x-position=\\\"before\\\" #menuMovimento=\\\"matMenu\\\">\\r\\n    <button mat-menu-item>Entrada</button>\\r\\n    <button mat-menu-item>Saida</button>\\r\\n</mat-menu>\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'HomeComponent',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.css'],    \r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class HomeComponent implements OnInit {\r\n    usuario: String;\r\n\r\n    constructor(private router: Router) { }\r\n\r\n    ngOnInit(){\r\n       this.usuario = localStorage.getItem('usuario');\r\n    }\r\n\r\n    Logout(){\r\n        this.router.navigate(['/login']);\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home.component';\r\nimport { HomeRouting } from './home.routing';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { MaterialModule } from '../material.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n      CommonModule,\r\n      HomeRouting,\r\n      RouterModule,\r\n      ReactiveFormsModule,\r\n      FormsModule,\r\n      BrowserModule,\r\n      BrowserAnimationsModule,\r\n      MaterialModule\r\n    ],\r\n    declarations: [\r\n        HomeComponent\r\n    ],\r\n    providers: [\r\n        \r\n    ]\r\n  })\r\n  export class HomeModule { }","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport {HomeComponent } from './home.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild([\r\n      { path: 'home', component: HomeComponent }\r\n    ])\r\n  ]\r\n})\r\nexport class HomeRouting { }","module.exports = \".login_container{\\r\\n    height: 100% !important;\\r\\n    width: 100% !important;\\r\\n    position: fixed !important;\\r\\n    margin: 0!important;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n}\"","module.exports = \"<!--h5>Login</h5>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"input-field col s12\\\">\\r\\n      <input [(ngModel)]=\\\"usuario.nome\\\" id=\\\"usuario\\\" type=\\\"text\\\" class=\\\"validate\\\" name=\\\"nome\\\">\\r\\n      <label class=\\\"active\\\" for=\\\"usuario\\\">Usuário</label>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"input-field col s12\\\">\\r\\n      <input [(ngModel)]=\\\"usuario.senha\\\" id=\\\"senha\\\" type=\\\"password\\\" class=\\\"validate\\\" name=\\\"senha\\\">\\r\\n      <label class=\\\"active\\\" for=\\\"senha\\\">Senha</label>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"input-field col s12\\\">\\r\\n    <input  id=\\\"texto\\\" type=\\\"text\\\" name=\\\"texto\\\" [(ngModel)]=\\\"mensagem\\\">\\r\\n    <label class=\\\"active\\\" for=\\\"texto\\\">Mensagem</label>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<button class=\\\"btn waves-effect waves-light\\\" \\r\\n    type=\\\"submit\\\" name=\\\"action\\\" (click)=\\\"getUsuario(usuario.nome, usuario.senha)\\\">\\r\\n    Login\\r\\n    <i class=\\\"material-icons right\\\">send</i>\\r\\n  </button!-->\\r\\n  <div *ngIf=\\\"isLoginError\\\" class=\\\"red-text center error-message\\\">\\r\\n    <i class=\\\"material-icons\\\">error</i> Incorrect username or password\\r\\n</div>\\r\\n<form #loginForm=\\\"ngForm\\\" class=\\\"col s12 white\\\" (ngSubmit)=\\\"getUsuario(UserName.value,Password.value)\\\">\\r\\n  \\r\\n  <div class=\\\"row\\\">\\r\\n     <div class=\\\"input-field col s12\\\">\\r\\n      <mat-form-field>\\r\\n        <input matInput type=\\\"text\\\" #UserName ngModel name=\\\"UserName\\\" placeholder=\\\"Username\\\" required>\\r\\n      </mat-form-field> \\r\\n     </div>\\r\\n   </div>\\r\\n   \\r\\n   <div class=\\\"row\\\">\\r\\n      <div class=\\\"input-field col s12\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput type=\\\"password\\\" #Password ngModel name=\\\"Password\\\" placeholder=\\\"Password\\\" required>\\r\\n        </mat-form-field> \\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"input-field col s12\\\">\\r\\n          <button [disabled]=\\\"!loginForm.valid\\\" (click)=\\\"getUsuario(UserName.value,Password.value)\\\" class=\\\"btn-large btn-submit\\\" type=\\\"button\\\">Login</button>\\r\\n        </div>\\r\\n      </div>\\r\\n</form>\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { UsuarioService } from '../_services/usuario.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Usuario} from '../_models/usuario'\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class LoginComponent implements OnInit{\r\n\r\n    public usuarioGlobal: String;\r\n    public usuarioConsultado: any;\r\n\r\n    mensagem: String;\r\n\r\n    usuario: Usuario = new Usuario();\r\n\r\n    public loginForm: FormGroup;\r\n\r\n    constructor(private usuarioService: UsuarioService,\r\n                private router: Router) { }\r\n\r\n    ngOnInit(){\r\n        localStorage.clear();\r\n        this.createLoginForm();\r\n    }\r\n\r\n    private createLoginForm() {\r\n        this.loginForm = new FormGroup({\r\n           nome: new FormControl(null, Validators.required),\r\n           senha: new FormControl(null, Validators.required),\r\n           mensagem: new FormControl(null, Validators.required)\r\n       });\r\n     }\r\n\r\n    getUsuario(nome, senha){\r\n        console.log(\"inicio get usuario - nome: \"+nome+\" senha: \"+senha)\r\n        \r\n        this.usuarioService.getUsuario(nome,senha).subscribe((data: any) => {\r\n            this.usuarioConsultado = data;\r\n            localStorage.setItem('usuario', data.usuario);\r\n            this.router.navigate(['/home'])\r\n            console.log(\"depois de chamar o serviço - \"+data)\r\n        }, (err: HttpErrorResponse) => {\r\n            this.mensagem = err.error.message;\r\n            console.log(\"erro na busca de usuario: \"+err.message);\r\n            console.log(\"erro na busca de usuario variavel: \"+this.mensagem);\r\n        });\r\n    }\r\n    \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login.component';\r\nimport { LoginRouting } from './login.routing';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { UsuarioService} from '../_services/usuario.service';\r\nimport { MaterialModule } from '../material.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n    imports: [\r\n      CommonModule,\r\n      LoginRouting,\r\n      RouterModule,\r\n      ReactiveFormsModule,\r\n      FormsModule,\r\n      MaterialModule,\r\n      BrowserAnimationsModule\r\n    ],\r\n    declarations: [\r\n      LoginComponent\r\n    ],\r\n    providers: [\r\n        UsuarioService\r\n    ]\r\n  })\r\n  export class LoginModule { }","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild([\r\n      { path: 'login', component: LoginComponent }\r\n    ])\r\n  ]\r\n})\r\nexport class LoginRouting { }","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HomeRouting } from \"../app/home/home.routing\";\r\n\r\nimport {\r\n  MatButtonModule,\r\n  MatMenuModule,\r\n  MatToolbarModule,\r\n  MatIconModule,\r\n  MatCardModule,\r\n  MatInputModule,\r\n  MatFormFieldModule,\r\n  MatSidenavModule,\r\n  MatListModule,\r\n  MatSelectModule,\r\n  MatTabsModule,\r\n  MatTableModule,\r\n  MatTooltipModule,\r\n  MatDialogModule,\r\n  MatProgressBarModule,\r\n  MatExpansionModule,\r\n  MatCheckboxModule,\r\n  MatProgressSpinnerModule,\r\n  MatAutocompleteModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MatSnackBarModule,\r\n  MatChipsModule,\r\n  MatRadioModule\r\n} from '@angular/material';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n@NgModule({\r\n  imports: [\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    CommonModule,\r\n    HttpClientModule,\r\n    MatSelectModule,\r\n    MatTabsModule,\r\n    MatTableModule,\r\n    MatTooltipModule,\r\n    MatDialogModule,\r\n    MatProgressBarModule,\r\n    MatExpansionModule,\r\n    MatCheckboxModule,\r\n    MatProgressSpinnerModule,\r\n    MatAutocompleteModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSnackBarModule,\r\n    MatChipsModule,\r\n    MatRadioModule,\r\n    RouterModule,\r\n    HomeRouting\r\n  ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    CommonModule,\r\n    HttpClientModule,\r\n    MatSelectModule,\r\n    MatTabsModule,\r\n    MatTableModule,\r\n    MatTooltipModule,\r\n    MatDialogModule,\r\n    MatProgressBarModule,\r\n    MatExpansionModule,\r\n    MatCheckboxModule,\r\n    MatProgressSpinnerModule,\r\n    MatAutocompleteModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatChipsModule,\r\n    MatSnackBarModule,\r\n    MatRadioModule\r\n  ],\r\n  declarations: [\r\n    \r\n  ]\r\n})\r\n\r\nexport class MaterialModule {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  API_URL: 'http://localhost:9090',\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}